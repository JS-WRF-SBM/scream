netcdf compy_FSCREAM-LR_ne30_SCREAM-forked-github_clen_1600p.cam.rh0.0000-01-06-00000 {
dimensions:
	ncol = 48602 ;
	time = UNLIMITED ; // (1 currently)
	nbnd = 2 ;
	chars = 8 ;
	cosp_prs = 7 ;
	cosp_tau = 7 ;
	cosp_scol = 10 ;
	cosp_ht = 40 ;
	cosp_sr = 15 ;
	cosp_sza = 5 ;
	cosp_dbze = 15 ;
	cosp_htmisr = 16 ;
	cosp_tau_modis = 6 ;
	lev = 72 ;
	ilev = 73 ;
	swband = 14 ;
	lwband = 16 ;
	P3_input_dim = 16 ;
	P3_output_dim = 32 ;
	mdimslen = 16 ;
	num_mdims = 15 ;
variables:
	double lat(ncol) ;
		lat:long_name = "latitude" ;
		lat:units = "degrees_north" ;
	double lon(ncol) ;
		lon:long_name = "longitude" ;
		lon:units = "degrees_east" ;
	double area(ncol) ;
		area:long_name = "gll grid areas" ;
	char mdimnames(num_mdims, mdimslen) ;
		mdimnames:long_name = "mdim dimension names" ;
	double time(time) ;
		time:long_name = "time" ;
		time:units = "days since 0000-01-01 00:00:00" ;
		time:calendar = "noleap" ;
		time:bounds = "time_bnds" ;
	int date(time) ;
		date:long_name = "current date (YYYYMMDD)" ;
	int datesec(time) ;
		datesec:long_name = "current seconds of current date" ;
	double time_bnds(time, nbnd) ;
		time_bnds:long_name = "time interval endpoints" ;
	char date_written(time, chars) ;
	char time_written(time, chars) ;
	int ndbase ;
		ndbase:long_name = "base day" ;
	int nsbase ;
		nsbase:long_name = "seconds of base day" ;
	int nbdate ;
		nbdate:long_name = "base date (YYYYMMDD)" ;
	int nbsec ;
		nbsec:long_name = "seconds of base date" ;
	int mdt ;
		mdt:long_name = "timestep" ;
		mdt:units = "s" ;
	int ndcur(time) ;
		ndcur:long_name = "current day (from base day)" ;
	int nscur(time) ;
		nscur:long_name = "current seconds of current day" ;
	double co2vmr(time) ;
		co2vmr:long_name = "co2 volume mixing ratio" ;
	double ch4vmr(time) ;
		ch4vmr:long_name = "ch4 volume mixing ratio" ;
	double n2ovmr(time) ;
		n2ovmr:long_name = "n2o volume mixing ratio" ;
	double f11vmr(time) ;
		f11vmr:long_name = "f11 volume mixing ratio" ;
	double f12vmr(time) ;
		f12vmr:long_name = "f12 volume mixing ratio" ;
	double sol_tsi(time) ;
		sol_tsi:long_name = "total solar irradiance" ;
		sol_tsi:units = "W/m2" ;
	int nsteph(time) ;
		nsteph:long_name = "current timestep" ;
	double AEROD_v(ncol) ;
		AEROD_v:_FillValue = 1.e+36 ;
		AEROD_v:missing_value = 1.e+36 ;
		AEROD_v:units = "1" ;
		AEROD_v:long_name = "Total Aerosol Optical Depth in visible band" ;
		AEROD_v:cell_methods = "time: mean" ;
	int AEROD_v_nacs(ncol) ;
	double ANRAIN(lev, ncol) ;
		ANRAIN:mdims = 10 ;
		ANRAIN:units = "m-3" ;
		ANRAIN:long_name = "Average rain number conc" ;
		ANRAIN:cell_methods = "time: mean" ;
	int ANRAIN_nacs ;
	double ANSNOW(lev, ncol) ;
		ANSNOW:mdims = 10 ;
		ANSNOW:units = "m-3" ;
		ANSNOW:long_name = "Average snow number conc" ;
		ANSNOW:cell_methods = "time: mean" ;
	int ANSNOW_nacs ;
	double AODABS(ncol) ;
		AODABS:_FillValue = 1.e+36 ;
		AODABS:missing_value = 1.e+36 ;
		AODABS:long_name = "Aerosol absorption optical depth 550 nm" ;
		AODABS:cell_methods = "time: mean" ;
	int AODABS_nacs(ncol) ;
	double AODABSBC(ncol) ;
		AODABSBC:_FillValue = 1.e+36 ;
		AODABSBC:missing_value = 1.e+36 ;
		AODABSBC:long_name = "Aerosol absorption optical depth 550 nm from BC" ;
		AODABSBC:cell_methods = "time: mean" ;
	int AODABSBC_nacs(ncol) ;
	double AODBC(ncol) ;
		AODBC:_FillValue = 1.e+36 ;
		AODBC:missing_value = 1.e+36 ;
		AODBC:long_name = "Aerosol optical depth 550 nm from BC" ;
		AODBC:cell_methods = "time: mean" ;
	int AODBC_nacs(ncol) ;
	double AODDUST(ncol) ;
		AODDUST:_FillValue = 1.e+36 ;
		AODDUST:missing_value = 1.e+36 ;
		AODDUST:long_name = "Aerosol optical depth 550 nm from dust" ;
		AODDUST:cell_methods = "time: mean" ;
	int AODDUST_nacs(ncol) ;
	double AODDUST1(ncol) ;
		AODDUST1:_FillValue = 1.e+36 ;
		AODDUST1:missing_value = 1.e+36 ;
		AODDUST1:long_name = "Aerosol optical depth 550 nm model 1 from dust" ;
		AODDUST1:cell_methods = "time: mean" ;
	int AODDUST1_nacs(ncol) ;
	double AODDUST3(ncol) ;
		AODDUST3:_FillValue = 1.e+36 ;
		AODDUST3:missing_value = 1.e+36 ;
		AODDUST3:long_name = "Aerosol optical depth 550 nm model 3 from dust" ;
		AODDUST3:cell_methods = "time: mean" ;
	int AODDUST3_nacs(ncol) ;
	double AODMODE1(ncol) ;
		AODMODE1:_FillValue = 1.e+36 ;
		AODMODE1:missing_value = 1.e+36 ;
		AODMODE1:long_name = "Aerosol optical depth 550 nm mode 1" ;
		AODMODE1:cell_methods = "time: mean" ;
	int AODMODE1_nacs(ncol) ;
	double AODMODE2(ncol) ;
		AODMODE2:_FillValue = 1.e+36 ;
		AODMODE2:missing_value = 1.e+36 ;
		AODMODE2:long_name = "Aerosol optical depth 550 nm mode 2" ;
		AODMODE2:cell_methods = "time: mean" ;
	int AODMODE2_nacs(ncol) ;
	double AODMODE3(ncol) ;
		AODMODE3:_FillValue = 1.e+36 ;
		AODMODE3:missing_value = 1.e+36 ;
		AODMODE3:long_name = "Aerosol optical depth 550 nm mode 3" ;
		AODMODE3:cell_methods = "time: mean" ;
	int AODMODE3_nacs(ncol) ;
	double AODNIR(ncol) ;
		AODNIR:_FillValue = 1.e+36 ;
		AODNIR:missing_value = 1.e+36 ;
		AODNIR:long_name = "Aerosol optical depth 850 nm" ;
		AODNIR:cell_methods = "time: mean" ;
	int AODNIR_nacs(ncol) ;
	double AODPOM(ncol) ;
		AODPOM:_FillValue = 1.e+36 ;
		AODPOM:missing_value = 1.e+36 ;
		AODPOM:long_name = "Aerosol optical depth 550 nm from POM" ;
		AODPOM:cell_methods = "time: mean" ;
	int AODPOM_nacs(ncol) ;
	double AODSO4(ncol) ;
		AODSO4:_FillValue = 1.e+36 ;
		AODSO4:missing_value = 1.e+36 ;
		AODSO4:long_name = "Aerosol optical depth 550 nm from SO4" ;
		AODSO4:cell_methods = "time: mean" ;
	int AODSO4_nacs(ncol) ;
	double AODSOA(ncol) ;
		AODSOA:_FillValue = 1.e+36 ;
		AODSOA:missing_value = 1.e+36 ;
		AODSOA:long_name = "Aerosol optical depth 550 nm from SOA" ;
		AODSOA:cell_methods = "time: mean" ;
	int AODSOA_nacs(ncol) ;
	double AODSS(ncol) ;
		AODSS:_FillValue = 1.e+36 ;
		AODSS:missing_value = 1.e+36 ;
		AODSS:long_name = "Aerosol optical depth 550 nm from seasalt" ;
		AODSS:cell_methods = "time: mean" ;
	int AODSS_nacs(ncol) ;
	double AODUV(ncol) ;
		AODUV:_FillValue = 1.e+36 ;
		AODUV:missing_value = 1.e+36 ;
		AODUV:long_name = "Aerosol optical depth 350 nm" ;
		AODUV:cell_methods = "time: mean" ;
	int AODUV_nacs(ncol) ;
	double AODVIS(ncol) ;
		AODVIS:_FillValue = 1.e+36 ;
		AODVIS:missing_value = 1.e+36 ;
		AODVIS:long_name = "Aerosol optical depth 550 nm" ;
		AODVIS:cell_methods = "time: mean" ;
	int AODVIS_nacs(ncol) ;
	double AQRAIN(lev, ncol) ;
		AQRAIN:mdims = 10 ;
		AQRAIN:units = "kg/kg" ;
		AQRAIN:long_name = "Average rain mixing ratio" ;
		AQRAIN:cell_methods = "time: mean" ;
	int AQRAIN_nacs ;
	double AQSNOW(lev, ncol) ;
		AQSNOW:mdims = 10 ;
		AQSNOW:units = "kg/kg" ;
		AQSNOW:long_name = "Average snow mixing ratio" ;
		AQSNOW:cell_methods = "time: mean" ;
	int AQSNOW_nacs ;
	double AREI(lev, ncol) ;
		AREI:mdims = 10 ;
		AREI:units = "Micron" ;
		AREI:long_name = "Average ice effective radius" ;
		AREI:cell_methods = "time: mean" ;
	int AREI_nacs ;
	double AREL(lev, ncol) ;
		AREL:mdims = 10 ;
		AREL:units = "Micron" ;
		AREL:long_name = "Average droplet effective radius" ;
		AREL:cell_methods = "time: mean" ;
	int AREL_nacs ;
	double AWNC(lev, ncol) ;
		AWNC:mdims = 10 ;
		AWNC:units = "m-3" ;
		AWNC:long_name = "Average cloud water number conc" ;
		AWNC:cell_methods = "time: mean" ;
	int AWNC_nacs ;
	double AWNI(lev, ncol) ;
		AWNI:mdims = 10 ;
		AWNI:units = "m-3" ;
		AWNI:long_name = "Average cloud ice number conc" ;
		AWNI:cell_methods = "time: mean" ;
	int AWNI_nacs ;
	double BRUNT(lev, ncol) ;
		BRUNT:mdims = 10 ;
		BRUNT:units = "s-1" ;
		BRUNT:long_name = "Brunt frequency" ;
		BRUNT:cell_methods = "time: mean" ;
	int BRUNT_nacs ;
	double BVRIM(lev, ncol) ;
		BVRIM:mdims = 10 ;
		BVRIM:units = "m3/kg" ;
		BVRIM:mixing_ratio = "wet" ;
		BVRIM:long_name = "Grid box averaged riming volume" ;
		BVRIM:cell_methods = "time: mean" ;
	int BVRIM_nacs ;
	double CCN3(lev, ncol) ;
		CCN3:mdims = 10 ;
		CCN3:units = "#/cm3" ;
		CCN3:long_name = "CCN concentration at S=0.1%" ;
		CCN3:cell_methods = "time: mean" ;
	int CCN3_nacs ;
	double CDNUMC(ncol) ;
		CDNUMC:units = "1/m2" ;
		CDNUMC:long_name = "Vertically-integrated droplet concentration" ;
		CDNUMC:cell_methods = "time: mean" ;
	int CDNUMC_nacs ;
	double CFAD_DBZE94_CS(cosp_ht, cosp_dbze, ncol) ;
		CFAD_DBZE94_CS:mdims = 7, 4 ;
		CFAD_DBZE94_CS:_FillValue = -1.e+30 ;
		CFAD_DBZE94_CS:missing_value = -1.e+30 ;
		CFAD_DBZE94_CS:units = "fraction" ;
		CFAD_DBZE94_CS:long_name = "Radar Reflectivity Factor CFAD (94 GHz)" ;
		CFAD_DBZE94_CS:cell_methods = "time: mean" ;
	int CFAD_DBZE94_CS_nacs(ncol) ;
	double CLDHGH(ncol) ;
		CLDHGH:units = "fraction" ;
		CLDHGH:long_name = "Vertically-integrated high cloud" ;
		CLDHGH:cell_methods = "time: mean" ;
	int CLDHGH_nacs ;
	double CLDHGH_CAL(ncol) ;
		CLDHGH_CAL:_FillValue = -1.e+30 ;
		CLDHGH_CAL:missing_value = -1.e+30 ;
		CLDHGH_CAL:units = "percent" ;
		CLDHGH_CAL:long_name = "Lidar High-level Cloud Fraction" ;
		CLDHGH_CAL:cell_methods = "time: mean" ;
	int CLDHGH_CAL_nacs(ncol) ;
	double CLDHGH_CAL_ICE(ncol) ;
		CLDHGH_CAL_ICE:_FillValue = -1.e+30 ;
		CLDHGH_CAL_ICE:missing_value = -1.e+30 ;
		CLDHGH_CAL_ICE:units = "percent" ;
		CLDHGH_CAL_ICE:long_name = "Lidar High-level Ice Cloud Fraction" ;
		CLDHGH_CAL_ICE:cell_methods = "time: mean" ;
	int CLDHGH_CAL_ICE_nacs(ncol) ;
	double CLDHGH_CAL_LIQ(ncol) ;
		CLDHGH_CAL_LIQ:_FillValue = -1.e+30 ;
		CLDHGH_CAL_LIQ:missing_value = -1.e+30 ;
		CLDHGH_CAL_LIQ:units = "percent" ;
		CLDHGH_CAL_LIQ:long_name = "Lidar High-level Liquid Cloud Fraction" ;
		CLDHGH_CAL_LIQ:cell_methods = "time: mean" ;
	int CLDHGH_CAL_LIQ_nacs(ncol) ;
	double CLDHGH_CAL_UN(ncol) ;
		CLDHGH_CAL_UN:_FillValue = -1.e+30 ;
		CLDHGH_CAL_UN:missing_value = -1.e+30 ;
		CLDHGH_CAL_UN:units = "percent" ;
		CLDHGH_CAL_UN:long_name = "Lidar High-level Undefined-Phase Cloud Fraction" ;
		CLDHGH_CAL_UN:cell_methods = "time: mean" ;
	int CLDHGH_CAL_UN_nacs(ncol) ;
	double CLDICE(lev, ncol) ;
		CLDICE:mdims = 10 ;
		CLDICE:units = "kg/kg" ;
		CLDICE:mixing_ratio = "wet" ;
		CLDICE:long_name = "Grid box averaged cloud ice amount" ;
		CLDICE:cell_methods = "time: mean" ;
	int CLDICE_nacs ;
	double CLDLIQ(lev, ncol) ;
		CLDLIQ:mdims = 10 ;
		CLDLIQ:units = "kg/kg" ;
		CLDLIQ:mixing_ratio = "wet" ;
		CLDLIQ:long_name = "Grid box averaged cloud liquid amount" ;
		CLDLIQ:cell_methods = "time: mean" ;
	int CLDLIQ_nacs ;
	double CLDLOW(ncol) ;
		CLDLOW:units = "fraction" ;
		CLDLOW:long_name = "Vertically-integrated low cloud" ;
		CLDLOW:cell_methods = "time: mean" ;
	int CLDLOW_nacs ;
	double CLDLOW_CAL(ncol) ;
		CLDLOW_CAL:_FillValue = -1.e+30 ;
		CLDLOW_CAL:missing_value = -1.e+30 ;
		CLDLOW_CAL:units = "percent" ;
		CLDLOW_CAL:long_name = "Lidar Low-level Cloud Fraction" ;
		CLDLOW_CAL:cell_methods = "time: mean" ;
	int CLDLOW_CAL_nacs(ncol) ;
	double CLDLOW_CAL_ICE(ncol) ;
		CLDLOW_CAL_ICE:_FillValue = -1.e+30 ;
		CLDLOW_CAL_ICE:missing_value = -1.e+30 ;
		CLDLOW_CAL_ICE:units = "percent" ;
		CLDLOW_CAL_ICE:long_name = "Lidar Low-level Ice Cloud Fraction" ;
		CLDLOW_CAL_ICE:cell_methods = "time: mean" ;
	int CLDLOW_CAL_ICE_nacs(ncol) ;
	double CLDLOW_CAL_LIQ(ncol) ;
		CLDLOW_CAL_LIQ:_FillValue = -1.e+30 ;
		CLDLOW_CAL_LIQ:missing_value = -1.e+30 ;
		CLDLOW_CAL_LIQ:units = "percent" ;
		CLDLOW_CAL_LIQ:long_name = "Lidar Low-level Liquid Cloud Fraction" ;
		CLDLOW_CAL_LIQ:cell_methods = "time: mean" ;
	int CLDLOW_CAL_LIQ_nacs(ncol) ;
	double CLDLOW_CAL_UN(ncol) ;
		CLDLOW_CAL_UN:_FillValue = -1.e+30 ;
		CLDLOW_CAL_UN:missing_value = -1.e+30 ;
		CLDLOW_CAL_UN:units = "percent" ;
		CLDLOW_CAL_UN:long_name = "Lidar Low-level Undefined-Phase Cloud Fraction" ;
		CLDLOW_CAL_UN:cell_methods = "time: mean" ;
	int CLDLOW_CAL_UN_nacs(ncol) ;
	double CLDMED(ncol) ;
		CLDMED:units = "fraction" ;
		CLDMED:long_name = "Vertically-integrated mid-level cloud" ;
		CLDMED:cell_methods = "time: mean" ;
	int CLDMED_nacs ;
	double CLDMED_CAL(ncol) ;
		CLDMED_CAL:_FillValue = -1.e+30 ;
		CLDMED_CAL:missing_value = -1.e+30 ;
		CLDMED_CAL:units = "percent" ;
		CLDMED_CAL:long_name = "Lidar Mid-level Cloud Fraction" ;
		CLDMED_CAL:cell_methods = "time: mean" ;
	int CLDMED_CAL_nacs(ncol) ;
	double CLDMED_CAL_ICE(ncol) ;
		CLDMED_CAL_ICE:_FillValue = -1.e+30 ;
		CLDMED_CAL_ICE:missing_value = -1.e+30 ;
		CLDMED_CAL_ICE:units = "percent" ;
		CLDMED_CAL_ICE:long_name = "Lidar Mid-level Ice Cloud Fraction" ;
		CLDMED_CAL_ICE:cell_methods = "time: mean" ;
	int CLDMED_CAL_ICE_nacs(ncol) ;
	double CLDMED_CAL_LIQ(ncol) ;
		CLDMED_CAL_LIQ:_FillValue = -1.e+30 ;
		CLDMED_CAL_LIQ:missing_value = -1.e+30 ;
		CLDMED_CAL_LIQ:units = "percent" ;
		CLDMED_CAL_LIQ:long_name = "Lidar Mid-level Liquid Cloud Fraction" ;
		CLDMED_CAL_LIQ:cell_methods = "time: mean" ;
	int CLDMED_CAL_LIQ_nacs(ncol) ;
	double CLDMED_CAL_UN(ncol) ;
		CLDMED_CAL_UN:_FillValue = -1.e+30 ;
		CLDMED_CAL_UN:missing_value = -1.e+30 ;
		CLDMED_CAL_UN:units = "percent" ;
		CLDMED_CAL_UN:long_name = "Lidar Mid-level Undefined-Phase Cloud Fraction" ;
		CLDMED_CAL_UN:cell_methods = "time: mean" ;
	int CLDMED_CAL_UN_nacs(ncol) ;
	double CLDRIM(lev, ncol) ;
		CLDRIM:mdims = 10 ;
		CLDRIM:units = "kg/kg" ;
		CLDRIM:mixing_ratio = "wet" ;
		CLDRIM:long_name = "Grid box averaged riming amount" ;
		CLDRIM:cell_methods = "time: mean" ;
	int CLDRIM_nacs ;
	double CLDTOT(ncol) ;
		CLDTOT:units = "fraction" ;
		CLDTOT:long_name = "Vertically-integrated total cloud" ;
		CLDTOT:cell_methods = "time: mean" ;
	int CLDTOT_nacs ;
	double CLDTOT_CAL(ncol) ;
		CLDTOT_CAL:_FillValue = -1.e+30 ;
		CLDTOT_CAL:missing_value = -1.e+30 ;
		CLDTOT_CAL:units = "percent" ;
		CLDTOT_CAL:long_name = "Lidar Total Cloud Fraction" ;
		CLDTOT_CAL:cell_methods = "time: mean" ;
	int CLDTOT_CAL_nacs(ncol) ;
	double CLDTOT_CALCS(ncol) ;
		CLDTOT_CALCS:_FillValue = -1.e+30 ;
		CLDTOT_CALCS:missing_value = -1.e+30 ;
		CLDTOT_CALCS:units = "percent" ;
		CLDTOT_CALCS:long_name = " Lidar and Radar Total Cloud Fraction" ;
		CLDTOT_CALCS:cell_methods = "time: mean" ;
	int CLDTOT_CALCS_nacs(ncol) ;
	double CLDTOT_CAL_ICE(ncol) ;
		CLDTOT_CAL_ICE:_FillValue = -1.e+30 ;
		CLDTOT_CAL_ICE:missing_value = -1.e+30 ;
		CLDTOT_CAL_ICE:units = "percent" ;
		CLDTOT_CAL_ICE:long_name = "Lidar Total Ice Cloud Fraction" ;
		CLDTOT_CAL_ICE:cell_methods = "time: mean" ;
	int CLDTOT_CAL_ICE_nacs(ncol) ;
	double CLDTOT_CAL_LIQ(ncol) ;
		CLDTOT_CAL_LIQ:_FillValue = -1.e+30 ;
		CLDTOT_CAL_LIQ:missing_value = -1.e+30 ;
		CLDTOT_CAL_LIQ:units = "percent" ;
		CLDTOT_CAL_LIQ:long_name = "Lidar Total Liquid Cloud Fraction" ;
		CLDTOT_CAL_LIQ:cell_methods = "time: mean" ;
	int CLDTOT_CAL_LIQ_nacs(ncol) ;
	double CLDTOT_CAL_UN(ncol) ;
		CLDTOT_CAL_UN:_FillValue = -1.e+30 ;
		CLDTOT_CAL_UN:missing_value = -1.e+30 ;
		CLDTOT_CAL_UN:units = "percent" ;
		CLDTOT_CAL_UN:long_name = "Lidar Total Undefined-Phase Cloud Fraction" ;
		CLDTOT_CAL_UN:cell_methods = "time: mean" ;
	int CLDTOT_CAL_UN_nacs(ncol) ;
	double CLDTOT_CS(ncol) ;
		CLDTOT_CS:_FillValue = -1.e+30 ;
		CLDTOT_CS:missing_value = -1.e+30 ;
		CLDTOT_CS:units = "percent" ;
		CLDTOT_CS:long_name = " Radar total cloud amount" ;
		CLDTOT_CS:cell_methods = "time: mean" ;
	int CLDTOT_CS_nacs(ncol) ;
	double CLDTOT_CS2(ncol) ;
		CLDTOT_CS2:_FillValue = -1.e+30 ;
		CLDTOT_CS2:missing_value = -1.e+30 ;
		CLDTOT_CS2:units = "percent" ;
		CLDTOT_CS2:long_name = " Radar total cloud amount without the data for the first kilometer above surface" ;
		CLDTOT_CS2:cell_methods = "time: mean" ;
	int CLDTOT_CS2_nacs(ncol) ;
	double CLDTOT_ISCCP(ncol) ;
		CLDTOT_ISCCP:_FillValue = -1.e+30 ;
		CLDTOT_ISCCP:missing_value = -1.e+30 ;
		CLDTOT_ISCCP:units = "percent" ;
		CLDTOT_ISCCP:long_name = "Total Cloud Fraction Calculated by the ISCCP Simulator" ;
		CLDTOT_ISCCP:cell_methods = "time: mean" ;
	int CLDTOT_ISCCP_nacs(ncol) ;
	double CLD_CAL_NOTCS(cosp_ht, ncol) ;
		CLD_CAL_NOTCS:mdims = 4 ;
		CLD_CAL_NOTCS:_FillValue = -1.e+30 ;
		CLD_CAL_NOTCS:missing_value = -1.e+30 ;
		CLD_CAL_NOTCS:units = "percent" ;
		CLD_CAL_NOTCS:long_name = "Cloud occurrence seen by CALIPSO but not CloudSat" ;
		CLD_CAL_NOTCS:cell_methods = "time: mean" ;
	int CLD_CAL_NOTCS_nacs(ncol) ;
	double CLD_MISR(cosp_htmisr, cosp_tau, ncol) ;
		CLD_MISR:mdims = 2, 8 ;
		CLD_MISR:_FillValue = -1.e+30 ;
		CLD_MISR:missing_value = -1.e+30 ;
		CLD_MISR:units = "percent" ;
		CLD_MISR:long_name = "Cloud Fraction from MISR Simulator" ;
		CLD_MISR:cell_methods = "time: mean" ;
	int CLD_MISR_nacs(ncol) ;
	double CLHMODIS(ncol) ;
		CLHMODIS:_FillValue = -1.e+30 ;
		CLHMODIS:missing_value = -1.e+30 ;
		CLHMODIS:units = "%" ;
		CLHMODIS:long_name = "MODIS High Level Cloud Fraction" ;
		CLHMODIS:cell_methods = "time: mean" ;
	int CLHMODIS_nacs(ncol) ;
	double CLIMODIS(ncol) ;
		CLIMODIS:_FillValue = -1.e+30 ;
		CLIMODIS:missing_value = -1.e+30 ;
		CLIMODIS:units = "%" ;
		CLIMODIS:long_name = "MODIS Ice Cloud Fraction" ;
		CLIMODIS:cell_methods = "time: mean" ;
	int CLIMODIS_nacs(ncol) ;
	double CLLMODIS(ncol) ;
		CLLMODIS:_FillValue = -1.e+30 ;
		CLLMODIS:missing_value = -1.e+30 ;
		CLLMODIS:units = "%" ;
		CLLMODIS:long_name = "MODIS Low Level Cloud Fraction" ;
		CLLMODIS:cell_methods = "time: mean" ;
	int CLLMODIS_nacs(ncol) ;
	double CLMMODIS(ncol) ;
		CLMMODIS:_FillValue = -1.e+30 ;
		CLMMODIS:missing_value = -1.e+30 ;
		CLMMODIS:units = "%" ;
		CLMMODIS:long_name = "MODIS Mid Level Cloud Fraction" ;
		CLMMODIS:cell_methods = "time: mean" ;
	int CLMMODIS_nacs(ncol) ;
	double CLMODIS(cosp_prs, cosp_tau_modis, ncol) ;
		CLMODIS:mdims = 9, 1 ;
		CLMODIS:_FillValue = -1.e+30 ;
		CLMODIS:missing_value = -1.e+30 ;
		CLMODIS:units = "%" ;
		CLMODIS:long_name = "MODIS Cloud Area Fraction" ;
		CLMODIS:cell_methods = "time: mean" ;
	int CLMODIS_nacs(ncol) ;
	double CLOUD(lev, ncol) ;
		CLOUD:mdims = 10 ;
		CLOUD:units = "fraction" ;
		CLOUD:long_name = "Cloud fraction" ;
		CLOUD:cell_methods = "time: mean" ;
	int CLOUD_nacs ;
	double CLOUDFRAC_ICE_MICRO(lev, ncol) ;
		CLOUDFRAC_ICE_MICRO:mdims = 10 ;
		CLOUDFRAC_ICE_MICRO:units = "unitless" ;
		CLOUDFRAC_ICE_MICRO:long_name = "Grid box ice cloud fraction in microphysics" ;
		CLOUDFRAC_ICE_MICRO:cell_methods = "time: mean" ;
	int CLOUDFRAC_ICE_MICRO_nacs ;
	double CLOUDFRAC_LIQ_MICRO(lev, ncol) ;
		CLOUDFRAC_LIQ_MICRO:mdims = 10 ;
		CLOUDFRAC_LIQ_MICRO:units = "unitless" ;
		CLOUDFRAC_LIQ_MICRO:long_name = "Grid box liquid cloud fraction in microphysics" ;
		CLOUDFRAC_LIQ_MICRO:cell_methods = "time: mean" ;
	int CLOUDFRAC_LIQ_MICRO_nacs ;
	double CLOUDFRAC_RAIN_MICRO(lev, ncol) ;
		CLOUDFRAC_RAIN_MICRO:mdims = 10 ;
		CLOUDFRAC_RAIN_MICRO:units = "unitless" ;
		CLOUDFRAC_RAIN_MICRO:long_name = "Grid box rain cloud fraction in microphysics" ;
		CLOUDFRAC_RAIN_MICRO:cell_methods = "time: mean" ;
	int CLOUDFRAC_RAIN_MICRO_nacs ;
	double CLTMODIS(ncol) ;
		CLTMODIS:_FillValue = -1.e+30 ;
		CLTMODIS:missing_value = -1.e+30 ;
		CLTMODIS:units = "%" ;
		CLTMODIS:long_name = "MODIS Total Cloud Fraction" ;
		CLTMODIS:cell_methods = "time: mean" ;
	int CLTMODIS_nacs(ncol) ;
	double CLWMODIS(ncol) ;
		CLWMODIS:_FillValue = -1.e+30 ;
		CLWMODIS:missing_value = -1.e+30 ;
		CLWMODIS:units = "%" ;
		CLWMODIS:long_name = "MODIS Liquid Cloud Fraction" ;
		CLWMODIS:cell_methods = "time: mean" ;
	int CLWMODIS_nacs(ncol) ;
	double CONCLD(lev, ncol) ;
		CONCLD:mdims = 10 ;
		CONCLD:units = "fraction" ;
		CONCLD:long_name = "Convective cloud cover" ;
		CONCLD:cell_methods = "time: mean" ;
	int CONCLD_nacs ;
	double DCQ(lev, ncol) ;
		DCQ:mdims = 10 ;
		DCQ:units = "kg/kg/s" ;
		DCQ:long_name = "Q tendency due to moist processes" ;
		DCQ:cell_methods = "time: mean" ;
	int DCQ_nacs ;
	double DTCOND(lev, ncol) ;
		DTCOND:mdims = 10 ;
		DTCOND:units = "K/s" ;
		DTCOND:long_name = "T tendency - moist processes" ;
		DTCOND:cell_methods = "time: mean" ;
	int DTCOND_nacs ;
	double DTENDTH(ncol) ;
		DTENDTH:units = "W/m2" ;
		DTENDTH:long_name = "Dynamic Tendency of Total (vertically integrated) moist static energy" ;
		DTENDTH:cell_methods = "time: mean" ;
	int DTENDTH_nacs ;
	double DTENDTQ(ncol) ;
		DTENDTQ:units = "kg/m2/s" ;
		DTENDTQ:long_name = "Dynamic Tendency of Total (vertically integrated) specific humidity" ;
		DTENDTQ:cell_methods = "time: mean" ;
	int DTENDTQ_nacs ;
	double EXTINCT(lev, ncol) ;
		EXTINCT:mdims = 10 ;
		EXTINCT:_FillValue = 1.e+36 ;
		EXTINCT:missing_value = 1.e+36 ;
		EXTINCT:units = "/m" ;
		EXTINCT:long_name = "Aerosol extinction" ;
		EXTINCT:cell_methods = "time: mean" ;
	int EXTINCT_nacs(ncol) ;
	double FICE(lev, ncol) ;
		FICE:mdims = 10 ;
		FICE:units = "fraction" ;
		FICE:long_name = "Fractional ice content within cloud" ;
		FICE:cell_methods = "time: mean" ;
	int FICE_nacs ;
	double FISCCP1_COSP(cosp_prs, cosp_tau, ncol) ;
		FISCCP1_COSP:mdims = 2, 1 ;
		FISCCP1_COSP:_FillValue = -1.e+30 ;
		FISCCP1_COSP:missing_value = -1.e+30 ;
		FISCCP1_COSP:units = "percent" ;
		FISCCP1_COSP:long_name = "Grid-box fraction covered by each ISCCP D level cloud type" ;
		FISCCP1_COSP:cell_methods = "time: mean" ;
	int FISCCP1_COSP_nacs(ncol) ;
	double FLDS(ncol) ;
		FLDS:Sampling_Sequence = "rad_lwsw" ;
		FLDS:units = "W/m2" ;
		FLDS:long_name = "Downwelling longwave flux at surface" ;
		FLDS:cell_methods = "time: mean" ;
	int FLDS_nacs ;
	double FLNS(ncol) ;
		FLNS:Sampling_Sequence = "rad_lwsw" ;
		FLNS:units = "W/m2" ;
		FLNS:long_name = "Net longwave flux at surface" ;
		FLNS:cell_methods = "time: mean" ;
	int FLNS_nacs ;
	double FLNSC(ncol) ;
		FLNSC:Sampling_Sequence = "rad_lwsw" ;
		FLNSC:units = "W/m2" ;
		FLNSC:long_name = "Clearsky net longwave flux at surface" ;
		FLNSC:cell_methods = "time: mean" ;
	int FLNSC_nacs ;
	double FLNT(ncol) ;
		FLNT:Sampling_Sequence = "rad_lwsw" ;
		FLNT:units = "W/m2" ;
		FLNT:long_name = "Net longwave flux at top of model" ;
		FLNT:cell_methods = "time: mean" ;
	int FLNT_nacs ;
	double FLNTC(ncol) ;
		FLNTC:Sampling_Sequence = "rad_lwsw" ;
		FLNTC:units = "W/m2" ;
		FLNTC:long_name = "Clearsky net longwave flux at top of model" ;
		FLNTC:cell_methods = "time: mean" ;
	int FLNTC_nacs ;
	double FLUT(ncol) ;
		FLUT:Sampling_Sequence = "rad_lwsw" ;
		FLUT:units = "W/m2" ;
		FLUT:long_name = "Upwelling longwave flux at top of model" ;
		FLUT:cell_methods = "time: mean" ;
	int FLUT_nacs ;
	double FLUTC(ncol) ;
		FLUTC:Sampling_Sequence = "rad_lwsw" ;
		FLUTC:units = "W/m2" ;
		FLUTC:long_name = "Clearsky upwelling longwave flux at top of model" ;
		FLUTC:cell_methods = "time: mean" ;
	int FLUTC_nacs ;
	double FREQI(lev, ncol) ;
		FREQI:mdims = 10 ;
		FREQI:units = "fraction" ;
		FREQI:long_name = "Fractional occurrence of ice" ;
		FREQI:cell_methods = "time: mean" ;
	int FREQI_nacs ;
	double FREQL(lev, ncol) ;
		FREQL:mdims = 10 ;
		FREQL:units = "fraction" ;
		FREQL:long_name = "Fractional occurrence of liquid" ;
		FREQL:cell_methods = "time: mean" ;
	int FREQL_nacs ;
	double FREQR(lev, ncol) ;
		FREQR:mdims = 10 ;
		FREQR:units = "fraction" ;
		FREQR:long_name = "Fractional occurrence of rain" ;
		FREQR:cell_methods = "time: mean" ;
	int FREQR_nacs ;
	double FREQS(lev, ncol) ;
		FREQS:mdims = 10 ;
		FREQS:units = "fraction" ;
		FREQS:long_name = "Fractional occurrence of snow" ;
		FREQS:cell_methods = "time: mean" ;
	int FREQS_nacs ;
	double FSDS(ncol) ;
		FSDS:Sampling_Sequence = "rad_lwsw" ;
		FSDS:units = "W/m2" ;
		FSDS:long_name = "Downwelling solar flux at surface" ;
		FSDS:cell_methods = "time: mean" ;
	int FSDS_nacs ;
	double FSDSC(ncol) ;
		FSDSC:Sampling_Sequence = "rad_lwsw" ;
		FSDSC:units = "W/m2" ;
		FSDSC:long_name = "Clearsky downwelling solar flux at surface" ;
		FSDSC:cell_methods = "time: mean" ;
	int FSDSC_nacs ;
	double FSNS(ncol) ;
		FSNS:Sampling_Sequence = "rad_lwsw" ;
		FSNS:units = "W/m2" ;
		FSNS:long_name = "Net solar flux at surface" ;
		FSNS:cell_methods = "time: mean" ;
	int FSNS_nacs ;
	double FSNSC(ncol) ;
		FSNSC:Sampling_Sequence = "rad_lwsw" ;
		FSNSC:units = "W/m2" ;
		FSNSC:long_name = "Clearsky net solar flux at surface" ;
		FSNSC:cell_methods = "time: mean" ;
	int FSNSC_nacs ;
	double FSNT(ncol) ;
		FSNT:Sampling_Sequence = "rad_lwsw" ;
		FSNT:units = "W/m2" ;
		FSNT:long_name = "Net solar flux at top of model" ;
		FSNT:cell_methods = "time: mean" ;
	int FSNT_nacs ;
	double FSNTC(ncol) ;
		FSNTC:Sampling_Sequence = "rad_lwsw" ;
		FSNTC:units = "W/m2" ;
		FSNTC:long_name = "Clearsky net solar flux at top of model" ;
		FSNTC:cell_methods = "time: mean" ;
	int FSNTC_nacs ;
	double FSNTOA(ncol) ;
		FSNTOA:Sampling_Sequence = "rad_lwsw" ;
		FSNTOA:units = "W/m2" ;
		FSNTOA:long_name = "Net solar flux at top of atmosphere" ;
		FSNTOA:cell_methods = "time: mean" ;
	int FSNTOA_nacs ;
	double FSNTOAC(ncol) ;
		FSNTOAC:Sampling_Sequence = "rad_lwsw" ;
		FSNTOAC:units = "W/m2" ;
		FSNTOAC:long_name = "Clearsky net solar flux at top of atmosphere" ;
		FSNTOAC:cell_methods = "time: mean" ;
	int FSNTOAC_nacs ;
	double FSUTOA(ncol) ;
		FSUTOA:Sampling_Sequence = "rad_lwsw" ;
		FSUTOA:units = "W/m2" ;
		FSUTOA:long_name = "Upwelling solar flux at top of atmosphere" ;
		FSUTOA:cell_methods = "time: mean" ;
	int FSUTOA_nacs ;
	double FSUTOAC(ncol) ;
		FSUTOAC:Sampling_Sequence = "rad_lwsw" ;
		FSUTOAC:units = "W/m2" ;
		FSUTOAC:long_name = "Clearsky upwelling solar flux at top of atmosphere" ;
		FSUTOAC:cell_methods = "time: mean" ;
	int FSUTOAC_nacs ;
	double ICEFRAC(ncol) ;
		ICEFRAC:units = "fraction" ;
		ICEFRAC:long_name = "Fraction of sfc area covered by sea-ice" ;
		ICEFRAC:cell_methods = "time: mean" ;
	int ICEFRAC_nacs ;
	double ICIMR(lev, ncol) ;
		ICIMR:mdims = 10 ;
		ICIMR:units = "kg/kg" ;
		ICIMR:long_name = "Prognostic in-cloud ice mixing ratio" ;
		ICIMR:cell_methods = "time: mean" ;
	int ICIMR_nacs ;
	double ICWMR(lev, ncol) ;
		ICWMR:mdims = 10 ;
		ICWMR:units = "kg/kg" ;
		ICWMR:long_name = "Prognostic in-cloud water mixing ratio" ;
		ICWMR:cell_methods = "time: mean" ;
	int ICWMR_nacs ;
	double ISOTROPY(lev, ncol) ;
		ISOTROPY:mdims = 10 ;
		ISOTROPY:units = "s" ;
		ISOTROPY:long_name = "timescale" ;
		ISOTROPY:cell_methods = "time: mean" ;
	int ISOTROPY_nacs ;
	double IWC(lev, ncol) ;
		IWC:mdims = 10 ;
		IWC:units = "kg/m3" ;
		IWC:long_name = "Grid box average ice water content" ;
		IWC:cell_methods = "time: mean" ;
	int IWC_nacs ;
	double IWPMODIS(ncol) ;
		IWPMODIS:_FillValue = -1.e+30 ;
		IWPMODIS:missing_value = -1.e+30 ;
		IWPMODIS:units = "kg m-2" ;
		IWPMODIS:long_name = "MODIS Cloud Ice Water Path*CLIMODIS" ;
		IWPMODIS:cell_methods = "time: mean" ;
	int IWPMODIS_nacs(ncol) ;
	double LANDFRAC(ncol) ;
		LANDFRAC:units = "fraction" ;
		LANDFRAC:long_name = "Fraction of sfc area covered by land" ;
		LANDFRAC:cell_methods = "time: mean" ;
	int LANDFRAC_nacs ;
	double LHFLX(ncol) ;
		LHFLX:units = "W/m2" ;
		LHFLX:long_name = "Surface latent heat flux" ;
		LHFLX:cell_methods = "time: mean" ;
	int LHFLX_nacs ;
	double LWCF(ncol) ;
		LWCF:Sampling_Sequence = "rad_lwsw" ;
		LWCF:units = "W/m2" ;
		LWCF:long_name = "Longwave cloud forcing" ;
		LWCF:cell_methods = "time: mean" ;
	int LWCF_nacs ;
	double LWPMODIS(ncol) ;
		LWPMODIS:_FillValue = -1.e+30 ;
		LWPMODIS:missing_value = -1.e+30 ;
		LWPMODIS:units = "kg m-2" ;
		LWPMODIS:long_name = "MODIS Cloud Liquid Water Path*CLWMODIS" ;
		LWPMODIS:cell_methods = "time: mean" ;
	int LWPMODIS_nacs(ncol) ;
	double MEANCLDALB_ISCCP(ncol) ;
		MEANCLDALB_ISCCP:_FillValue = -1.e+30 ;
		MEANCLDALB_ISCCP:missing_value = -1.e+30 ;
		MEANCLDALB_ISCCP:units = "1" ;
		MEANCLDALB_ISCCP:long_name = "Mean cloud albedo*CLDTOT_ISCCP" ;
		MEANCLDALB_ISCCP:cell_methods = "time: mean" ;
	int MEANCLDALB_ISCCP_nacs(ncol) ;
	double MEANPTOP_ISCCP(ncol) ;
		MEANPTOP_ISCCP:_FillValue = -1.e+30 ;
		MEANPTOP_ISCCP:missing_value = -1.e+30 ;
		MEANPTOP_ISCCP:units = "Pa" ;
		MEANPTOP_ISCCP:long_name = "Mean cloud top pressure*CLDTOT_ISCCP" ;
		MEANPTOP_ISCCP:cell_methods = "time: mean" ;
	int MEANPTOP_ISCCP_nacs(ncol) ;
	double MEANTAU_ISCCP(ncol) ;
		MEANTAU_ISCCP:_FillValue = -1.e+30 ;
		MEANTAU_ISCCP:missing_value = -1.e+30 ;
		MEANTAU_ISCCP:units = "1" ;
		MEANTAU_ISCCP:long_name = "Mean optical thickness*CLDTOT_ISCCP" ;
		MEANTAU_ISCCP:cell_methods = "time: mean" ;
	int MEANTAU_ISCCP_nacs(ncol) ;
	double MEANTBCLR_ISCCP(ncol) ;
		MEANTBCLR_ISCCP:_FillValue = -1.e+30 ;
		MEANTBCLR_ISCCP:missing_value = -1.e+30 ;
		MEANTBCLR_ISCCP:units = "K" ;
		MEANTBCLR_ISCCP:long_name = "Mean Clear-sky Infrared Tb from ISCCP simulator" ;
		MEANTBCLR_ISCCP:cell_methods = "time: mean" ;
	int MEANTBCLR_ISCCP_nacs(ncol) ;
	double MEANTB_ISCCP(ncol) ;
		MEANTB_ISCCP:_FillValue = -1.e+30 ;
		MEANTB_ISCCP:missing_value = -1.e+30 ;
		MEANTB_ISCCP:units = "K" ;
		MEANTB_ISCCP:long_name = "Mean Infrared Tb from ISCCP simulator" ;
		MEANTB_ISCCP:cell_methods = "time: mean" ;
	int MEANTB_ISCCP_nacs(ncol) ;
	double NUMICE(lev, ncol) ;
		NUMICE:mdims = 10 ;
		NUMICE:units = "1/kg" ;
		NUMICE:mixing_ratio = "wet" ;
		NUMICE:long_name = "Grid box averaged cloud ice number" ;
		NUMICE:cell_methods = "time: mean" ;
	int NUMICE_nacs ;
	double NUMLIQ(lev, ncol) ;
		NUMLIQ:mdims = 10 ;
		NUMLIQ:units = "1/kg" ;
		NUMLIQ:mixing_ratio = "wet" ;
		NUMLIQ:long_name = "Grid box averaged cloud liquid number" ;
		NUMLIQ:cell_methods = "time: mean" ;
	int NUMLIQ_nacs ;
	double NUMRAI(lev, ncol) ;
		NUMRAI:mdims = 10 ;
		NUMRAI:units = "1/kg" ;
		NUMRAI:mixing_ratio = "wet" ;
		NUMRAI:long_name = "Grid box averaged rain number" ;
		NUMRAI:cell_methods = "time: mean" ;
	int NUMRAI_nacs ;
	double OCNFRAC(ncol) ;
		OCNFRAC:units = "fraction" ;
		OCNFRAC:long_name = "Fraction of sfc area covered by ocean" ;
		OCNFRAC:cell_methods = "time: mean" ;
	int OCNFRAC_nacs ;
	double OMEGA(lev, ncol) ;
		OMEGA:mdims = 10 ;
		OMEGA:units = "Pa/s" ;
		OMEGA:long_name = "Vertical velocity (pressure)" ;
		OMEGA:cell_methods = "time: mean" ;
	int OMEGA_nacs ;
	double OMEGA500(ncol) ;
		OMEGA500:units = "Pa/s" ;
		OMEGA500:long_name = "Vertical velocity at 500 mbar pressure surface" ;
		OMEGA500:cell_methods = "time: mean" ;
	int OMEGA500_nacs ;
	double OMEGAT(lev, ncol) ;
		OMEGAT:mdims = 10 ;
		OMEGAT:units = "K Pa/s" ;
		OMEGAT:long_name = "Vertical heat flux" ;
		OMEGAT:cell_methods = "time: mean" ;
	int OMEGAT_nacs ;
	double P3_mtend_CLDICE(lev, ncol) ;
		P3_mtend_CLDICE:mdims = 10 ;
		P3_mtend_CLDICE:units = "kg/kg/s" ;
		P3_mtend_CLDICE:long_name = "P3 Tendency for ice cloud content due to micro processes" ;
		P3_mtend_CLDICE:cell_methods = "time: mean" ;
	int P3_mtend_CLDICE_nacs ;
	double P3_mtend_CLDLIQ(lev, ncol) ;
		P3_mtend_CLDLIQ:mdims = 10 ;
		P3_mtend_CLDLIQ:units = "kg/kg/s" ;
		P3_mtend_CLDLIQ:long_name = "P3 Tendency for liquid cloud content due to micro processes" ;
		P3_mtend_CLDLIQ:cell_methods = "time: mean" ;
	int P3_mtend_CLDLIQ_nacs ;
	double P3_mtend_CLDRAIN(lev, ncol) ;
		P3_mtend_CLDRAIN:mdims = 10 ;
		P3_mtend_CLDRAIN:units = "kg/kg/s" ;
		P3_mtend_CLDRAIN:long_name = "P3 Tendency for rain cloud content due to micro processes" ;
		P3_mtend_CLDRAIN:cell_methods = "time: mean" ;
	int P3_mtend_CLDRAIN_nacs ;
	double P3_mtend_NUMICE(lev, ncol) ;
		P3_mtend_NUMICE:mdims = 10 ;
		P3_mtend_NUMICE:units = "kg/kg/s" ;
		P3_mtend_NUMICE:long_name = "P3 Tendency for ice cloud number due to micro processes" ;
		P3_mtend_NUMICE:cell_methods = "time: mean" ;
	int P3_mtend_NUMICE_nacs ;
	double P3_mtend_NUMLIQ(lev, ncol) ;
		P3_mtend_NUMLIQ:mdims = 10 ;
		P3_mtend_NUMLIQ:units = "kg/kg/s" ;
		P3_mtend_NUMLIQ:long_name = "P3 Tendency for liquid cloud number due to micro processes" ;
		P3_mtend_NUMLIQ:cell_methods = "time: mean" ;
	int P3_mtend_NUMLIQ_nacs ;
	double P3_mtend_NUMRAIN(lev, ncol) ;
		P3_mtend_NUMRAIN:mdims = 10 ;
		P3_mtend_NUMRAIN:units = "kg/kg/s" ;
		P3_mtend_NUMRAIN:long_name = "P3 Tendency for rain cloud number due to micro processes" ;
		P3_mtend_NUMRAIN:cell_methods = "time: mean" ;
	int P3_mtend_NUMRAIN_nacs ;
	double P3_mtend_Q(lev, ncol) ;
		P3_mtend_Q:mdims = 10 ;
		P3_mtend_Q:units = "kg/kg/s" ;
		P3_mtend_Q:long_name = "P3 Tendency for water vapor due to micro processes" ;
		P3_mtend_Q:cell_methods = "time: mean" ;
	int P3_mtend_Q_nacs ;
	double P3_mtend_TH(lev, ncol) ;
		P3_mtend_TH:mdims = 10 ;
		P3_mtend_TH:units = "kg/kg/s" ;
		P3_mtend_TH:long_name = "P3 Tendency for potential temp. number due to micro processes" ;
		P3_mtend_TH:cell_methods = "time: mean" ;
	int P3_mtend_TH_nacs ;
	double P3_ncacc(lev, ncol) ;
		P3_ncacc:mdims = 10 ;
		P3_ncacc:units = "kg/kg/s" ;
		P3_ncacc:long_name = "P3 Tendency for change in cloud droplet number from accretion by rain" ;
		P3_ncacc:cell_methods = "time: mean" ;
	int P3_ncacc_nacs ;
	double P3_ncautc(lev, ncol) ;
		P3_ncautc:mdims = 10 ;
		P3_ncautc:units = "kg/kg/s" ;
		P3_ncautc:long_name = "P3 Tendency for change in cloud droplet number from autoconversion" ;
		P3_ncautc:cell_methods = "time: mean" ;
	int P3_ncautc_nacs ;
	double P3_ncautr(lev, ncol) ;
		P3_ncautr:mdims = 10 ;
		P3_ncautr:units = "kg/kg/s" ;
		P3_ncautr:long_name = "P3 Tendency for change in rain number from autoconversion of cloud water" ;
		P3_ncautr:cell_methods = "time: mean" ;
	int P3_ncautr_nacs ;
	double P3_nccol(lev, ncol) ;
		P3_nccol:mdims = 10 ;
		P3_nccol:units = "kg/kg/s" ;
		P3_nccol:long_name = "P3 Tendency for change in cloud droplet number from collection by ice" ;
		P3_nccol:cell_methods = "time: mean" ;
	int P3_nccol_nacs ;
	double P3_ncheti(lev, ncol) ;
		P3_ncheti:mdims = 10 ;
		P3_ncheti:units = "kg/kg/s" ;
		P3_ncheti:long_name = "P3 Tendency for immersion freezing droplets" ;
		P3_ncheti:cell_methods = "time: mean" ;
	int P3_ncheti_nacs ;
	double P3_ncnuc(lev, ncol) ;
		P3_ncnuc:mdims = 10 ;
		P3_ncnuc:units = "kg/kg/s" ;
		P3_ncnuc:long_name = "P3 Tendency for change in cloud droplet number from activation of CCN" ;
		P3_ncnuc:cell_methods = "time: mean" ;
	int P3_ncnuc_nacs ;
	double P3_ncshdc(lev, ncol) ;
		P3_ncshdc:mdims = 10 ;
		P3_ncshdc:units = "kg/kg/s" ;
		P3_ncshdc:long_name = "P3 Tendency for source for rain number due to cloud water/ice collision above freezing  and shedding (combined with NRSHD in the paper)" ;
		P3_ncshdc:cell_methods = "time: mean" ;
	int P3_ncshdc_nacs ;
	double P3_ncslf(lev, ncol) ;
		P3_ncslf:mdims = 10 ;
		P3_ncslf:units = "kg/kg/s" ;
		P3_ncslf:long_name = "P3 Tendency for change in cloud droplet number from self-collection  (Not in paper?)" ;
		P3_ncslf:cell_methods = "time: mean" ;
	int P3_ncslf_nacs ;
	double P3_nimlt(lev, ncol) ;
		P3_nimlt:mdims = 10 ;
		P3_nimlt:units = "kg/kg/s" ;
		P3_nimlt:long_name = "P3 Tendency for melting of ice" ;
		P3_nimlt:cell_methods = "time: mean" ;
	int P3_nimlt_nacs ;
	double P3_ninuc(lev, ncol) ;
		P3_ninuc:mdims = 10 ;
		P3_ninuc:units = "kg/kg/s" ;
		P3_ninuc:long_name = "P3 Tendency for change in ice number from deposition/cond-freezing nucleation" ;
		P3_ninuc:cell_methods = "time: mean" ;
	int P3_ninuc_nacs ;
	double P3_nislf(lev, ncol) ;
		P3_nislf:mdims = 10 ;
		P3_nislf:units = "kg/kg/s" ;
		P3_nislf:long_name = "P3 Tendency for change in ice number from collection within a category (Not in paper?)" ;
		P3_nislf:cell_methods = "time: mean" ;
	int P3_nislf_nacs ;
	double P3_nisub(lev, ncol) ;
		P3_nisub:mdims = 10 ;
		P3_nisub:units = "kg/kg/s" ;
		P3_nisub:long_name = "P3 Tendency for change in ice number from sublimation" ;
		P3_nisub:cell_methods = "time: mean" ;
	int P3_nisub_nacs ;
	double P3_nrcol(lev, ncol) ;
		P3_nrcol:mdims = 10 ;
		P3_nrcol:units = "kg/kg/s" ;
		P3_nrcol:long_name = "P3 Tendency for change in rain number from collection by ice" ;
		P3_nrcol:cell_methods = "time: mean" ;
	int P3_nrcol_nacs ;
	double P3_nrevp(lev, ncol) ;
		P3_nrevp:mdims = 10 ;
		P3_nrevp:units = "kg/kg/s" ;
		P3_nrevp:long_name = "P3 Tendency for change in rain number from evaporation" ;
		P3_nrevp:cell_methods = "time: mean" ;
	int P3_nrevp_nacs ;
	double P3_nrheti(lev, ncol) ;
		P3_nrheti:mdims = 10 ;
		P3_nrheti:units = "kg/kg/s" ;
		P3_nrheti:long_name = "P3 Tendency for immersion freezing rain" ;
		P3_nrheti:cell_methods = "time: mean" ;
	int P3_nrheti_nacs ;
	double P3_nrshdr(lev, ncol) ;
		P3_nrshdr:mdims = 10 ;
		P3_nrshdr:units = "kg/kg/s" ;
		P3_nrshdr:long_name = "P3 Tendency for source for rain number from collision of rain/ice above freezing and shedding" ;
		P3_nrshdr:cell_methods = "time: mean" ;
	int P3_nrshdr_nacs ;
	double P3_nrslf(lev, ncol) ;
		P3_nrslf:mdims = 10 ;
		P3_nrslf:units = "kg/kg/s" ;
		P3_nrslf:long_name = "P3 Tendency for change in rain number from self-collection  (Not in paper?)" ;
		P3_nrslf:cell_methods = "time: mean" ;
	int P3_nrslf_nacs ;
	double P3_qcacc(lev, ncol) ;
		P3_qcacc:mdims = 10 ;
		P3_qcacc:units = "kg/kg/s" ;
		P3_qcacc:long_name = "P3 Tendency for cloud droplet accretion by rain" ;
		P3_qcacc:cell_methods = "time: mean" ;
	int P3_qcacc_nacs ;
	double P3_qcaut(lev, ncol) ;
		P3_qcaut:mdims = 10 ;
		P3_qcaut:units = "kg/kg/s" ;
		P3_qcaut:long_name = "P3 Tendency for cloud droplet autoconversion to rain" ;
		P3_qcaut:cell_methods = "time: mean" ;
	int P3_qcaut_nacs ;
	double P3_qccol(lev, ncol) ;
		P3_qccol:mdims = 10 ;
		P3_qccol:units = "kg/kg/s" ;
		P3_qccol:long_name = "P3 Tendency for collection of cloud water by ice" ;
		P3_qccol:cell_methods = "time: mean" ;
	int P3_qccol_nacs ;
	double P3_qccon(lev, ncol) ;
		P3_qccon:mdims = 10 ;
		P3_qccon:units = "kg/kg/s" ;
		P3_qccon:long_name = "P3 Tendency for cloud droplet condensation" ;
		P3_qccon:cell_methods = "time: mean" ;
	int P3_qccon_nacs ;
	double P3_qcevp(lev, ncol) ;
		P3_qcevp:mdims = 10 ;
		P3_qcevp:units = "kg/kg/s" ;
		P3_qcevp:long_name = "P3 Tendency for cloud droplet evaporation" ;
		P3_qcevp:cell_methods = "time: mean" ;
	int P3_qcevp_nacs ;
	double P3_qcheti(lev, ncol) ;
		P3_qcheti:mdims = 10 ;
		P3_qcheti:units = "kg/kg/s" ;
		P3_qcheti:long_name = "P3 Tendency for immersion freezing droplets" ;
		P3_qcheti:cell_methods = "time: mean" ;
	int P3_qcheti_nacs ;
	double P3_qcnuc(lev, ncol) ;
		P3_qcnuc:mdims = 10 ;
		P3_qcnuc:units = "kg/kg/s" ;
		P3_qcnuc:long_name = "P3 Tendency for activation of cloud droplets from CCN" ;
		P3_qcnuc:cell_methods = "time: mean" ;
	int P3_qcnuc_nacs ;
	double P3_qcshd(lev, ncol) ;
		P3_qcshd:mdims = 10 ;
		P3_qcshd:units = "kg/kg/s" ;
		P3_qcshd:long_name = "P3 Tendency for source for rain mass due to cloud water/ice collision above freezing and shedding or wet growth and shedding" ;
		P3_qcshd:cell_methods = "time: mean" ;
	int P3_qcshd_nacs ;
	double P3_qidep(lev, ncol) ;
		P3_qidep:mdims = 10 ;
		P3_qidep:units = "kg/kg/s" ;
		P3_qidep:long_name = "P3 Tendency for vapor deposition" ;
		P3_qidep:cell_methods = "time: mean" ;
	int P3_qidep_nacs ;
	double P3_qimlt(lev, ncol) ;
		P3_qimlt:mdims = 10 ;
		P3_qimlt:units = "kg/kg/s" ;
		P3_qimlt:long_name = "P3 Tendency for melting of ice" ;
		P3_qimlt:cell_methods = "time: mean" ;
	int P3_qimlt_nacs ;
	double P3_qinuc(lev, ncol) ;
		P3_qinuc:mdims = 10 ;
		P3_qinuc:units = "kg/kg/s" ;
		P3_qinuc:long_name = "P3 Tendency for deposition/condensation freezing nuc" ;
		P3_qinuc:cell_methods = "time: mean" ;
	int P3_qinuc_nacs ;
	double P3_qisub(lev, ncol) ;
		P3_qisub:mdims = 10 ;
		P3_qisub:units = "kg/kg/s" ;
		P3_qisub:long_name = "P3 Tendency for sublimation of ice" ;
		P3_qisub:cell_methods = "time: mean" ;
	int P3_qisub_nacs ;
	double P3_qrcol(lev, ncol) ;
		P3_qrcol:mdims = 10 ;
		P3_qrcol:units = "kg/kg/s" ;
		P3_qrcol:long_name = "P3 Tendency for collection rain mass by ice" ;
		P3_qrcol:cell_methods = "time: mean" ;
	int P3_qrcol_nacs ;
	double P3_qrcon(lev, ncol) ;
		P3_qrcon:mdims = 10 ;
		P3_qrcon:units = "kg/kg/s" ;
		P3_qrcon:long_name = "P3 Tendency for rain condensation   (Not in paper?)" ;
		P3_qrcon:cell_methods = "time: mean" ;
	int P3_qrcon_nacs ;
	double P3_qrevp(lev, ncol) ;
		P3_qrevp:mdims = 10 ;
		P3_qrevp:units = "kg/kg/s" ;
		P3_qrevp:long_name = "P3 Tendency for rain evaporation" ;
		P3_qrevp:cell_methods = "time: mean" ;
	int P3_qrevp_nacs ;
	double P3_qrheti(lev, ncol) ;
		P3_qrheti:mdims = 10 ;
		P3_qrheti:units = "kg/kg/s" ;
		P3_qrheti:long_name = "P3 Tendency for immersion freezing rain" ;
		P3_qrheti:cell_methods = "time: mean" ;
	int P3_qrheti_nacs ;
	double P3_qwgrth(lev, ncol) ;
		P3_qwgrth:mdims = 10 ;
		P3_qwgrth:units = "kg/kg/s" ;
		P3_qwgrth:long_name = "P3 wet growth rate" ;
		P3_qwgrth:cell_methods = "time: mean" ;
	int P3_qwgrth_nacs ;
	double P3_sed_CLDICE(lev, ncol) ;
		P3_sed_CLDICE:mdims = 10 ;
		P3_sed_CLDICE:units = "kg/kg/s" ;
		P3_sed_CLDICE:long_name = "P3 Tendency for ice cloud content due to sedimentation" ;
		P3_sed_CLDICE:cell_methods = "time: mean" ;
	int P3_sed_CLDICE_nacs ;
	double P3_sed_CLDLIQ(lev, ncol) ;
		P3_sed_CLDLIQ:mdims = 10 ;
		P3_sed_CLDLIQ:units = "kg/kg/s" ;
		P3_sed_CLDLIQ:long_name = "P3 Tendency for liquid cloud content due to sedimentation" ;
		P3_sed_CLDLIQ:cell_methods = "time: mean" ;
	int P3_sed_CLDLIQ_nacs ;
	double P3_sed_CLDRAIN(lev, ncol) ;
		P3_sed_CLDRAIN:mdims = 10 ;
		P3_sed_CLDRAIN:units = "kg/kg/s" ;
		P3_sed_CLDRAIN:long_name = "P3 Tendency for rain cloud content due to sedimentation" ;
		P3_sed_CLDRAIN:cell_methods = "time: mean" ;
	int P3_sed_CLDRAIN_nacs ;
	double P3_sed_NUMICE(lev, ncol) ;
		P3_sed_NUMICE:mdims = 10 ;
		P3_sed_NUMICE:units = "kg/kg/s" ;
		P3_sed_NUMICE:long_name = "P3 Tendency for ice cloud number due to sedimentation" ;
		P3_sed_NUMICE:cell_methods = "time: mean" ;
	int P3_sed_NUMICE_nacs ;
	double P3_sed_NUMLIQ(lev, ncol) ;
		P3_sed_NUMLIQ:mdims = 10 ;
		P3_sed_NUMLIQ:units = "kg/kg/s" ;
		P3_sed_NUMLIQ:long_name = "P3 Tendency for liquid cloud number due to sedimentation" ;
		P3_sed_NUMLIQ:cell_methods = "time: mean" ;
	int P3_sed_NUMLIQ_nacs ;
	double P3_sed_NUMRAIN(lev, ncol) ;
		P3_sed_NUMRAIN:mdims = 10 ;
		P3_sed_NUMRAIN:units = "kg/kg/s" ;
		P3_sed_NUMRAIN:long_name = "P3 Tendency for rain cloud number due to sedimentation" ;
		P3_sed_NUMRAIN:cell_methods = "time: mean" ;
	int P3_sed_NUMRAIN_nacs ;
	double PCTMODIS(ncol) ;
		PCTMODIS:_FillValue = -1.e+30 ;
		PCTMODIS:missing_value = -1.e+30 ;
		PCTMODIS:units = "Pa" ;
		PCTMODIS:long_name = "MODIS Cloud Top Pressure*CLTMODIS" ;
		PCTMODIS:cell_methods = "time: mean" ;
	int PCTMODIS_nacs(ncol) ;
	double PHIS(ncol) ;
		PHIS:units = "m2/s2" ;
		PHIS:long_name = "Surface geopotential" ;
	int PHIS_nacs ;
	double PRECC(ncol) ;
		PRECC:units = "m/s" ;
		PRECC:long_name = "Convective precipitation rate (liq + ice)" ;
		PRECC:cell_methods = "time: mean" ;
	int PRECC_nacs ;
	double PRECL(ncol) ;
		PRECL:units = "m/s" ;
		PRECL:long_name = "Large-scale (stable) precipitation rate (liq + ice)" ;
		PRECL:cell_methods = "time: mean" ;
	int PRECL_nacs ;
	double PRECSC(ncol) ;
		PRECSC:units = "m/s" ;
		PRECSC:long_name = "Convective snow rate (water equivalent)" ;
		PRECSC:cell_methods = "time: mean" ;
	int PRECSC_nacs ;
	double PRECSL(ncol) ;
		PRECSL:units = "m/s" ;
		PRECSL:long_name = "Large-scale (stable) snow rate (water equivalent)" ;
		PRECSL:cell_methods = "time: mean" ;
	int PRECSL_nacs ;
	double PS(ncol) ;
		PS:units = "Pa" ;
		PS:long_name = "Surface pressure" ;
		PS:cell_methods = "time: mean" ;
	int PS_nacs ;
	double PSL(ncol) ;
		PSL:units = "Pa" ;
		PSL:long_name = "Sea level pressure" ;
		PSL:cell_methods = "time: mean" ;
	int PSL_nacs ;
	double Q(lev, ncol) ;
		Q:mdims = 10 ;
		Q:units = "kg/kg" ;
		Q:mixing_ratio = "wet" ;
		Q:long_name = "Specific humidity" ;
		Q:cell_methods = "time: mean" ;
	int Q_nacs ;
	double QFLX(ncol) ;
		QFLX:units = "kg/m2/s" ;
		QFLX:long_name = "Surface water flux" ;
		QFLX:cell_methods = "time: mean" ;
	int QFLX_nacs ;
	double QREFHT(ncol) ;
		QREFHT:units = "kg/kg" ;
		QREFHT:long_name = "Reference height humidity" ;
		QREFHT:cell_methods = "time: mean" ;
	int QREFHT_nacs ;
	double QRL(lev, ncol) ;
		QRL:mdims = 10 ;
		QRL:Sampling_Sequence = "rad_lwsw" ;
		QRL:units = "K/s" ;
		QRL:long_name = "Longwave heating rate" ;
		QRL:cell_methods = "time: mean" ;
	int QRL_nacs ;
	double QRS(lev, ncol) ;
		QRS:mdims = 10 ;
		QRS:Sampling_Sequence = "rad_lwsw" ;
		QRS:units = "K/s" ;
		QRS:long_name = "Solar heating rate" ;
		QRS:cell_methods = "time: mean" ;
	int QRS_nacs ;
	double QWTHL_SEC(ilev, ncol) ;
		QWTHL_SEC:mdims = 11 ;
		QWTHL_SEC:units = "K kg/kg" ;
		QWTHL_SEC:long_name = "Temperature and moisture correlation" ;
		QWTHL_SEC:cell_methods = "time: mean" ;
	int QWTHL_SEC_nacs ;
	double QW_SEC(ilev, ncol) ;
		QW_SEC:mdims = 11 ;
		QW_SEC:units = "kg2/kg2" ;
		QW_SEC:long_name = "Moisture variance" ;
		QW_SEC:cell_methods = "time: mean" ;
	int QW_SEC_nacs ;
	double RAINQM(lev, ncol) ;
		RAINQM:mdims = 10 ;
		RAINQM:units = "kg/kg" ;
		RAINQM:mixing_ratio = "wet" ;
		RAINQM:long_name = "Grid box averaged rain amount" ;
		RAINQM:cell_methods = "time: mean" ;
	int RAINQM_nacs ;
	double REFFCLIMODIS(ncol) ;
		REFFCLIMODIS:_FillValue = -1.e+30 ;
		REFFCLIMODIS:missing_value = -1.e+30 ;
		REFFCLIMODIS:units = "m" ;
		REFFCLIMODIS:long_name = "MODIS Ice Cloud Particle Size*CLIMODIS" ;
		REFFCLIMODIS:cell_methods = "time: mean" ;
	int REFFCLIMODIS_nacs(ncol) ;
	double REFFCLWMODIS(ncol) ;
		REFFCLWMODIS:_FillValue = -1.e+30 ;
		REFFCLWMODIS:missing_value = -1.e+30 ;
		REFFCLWMODIS:units = "m" ;
		REFFCLWMODIS:long_name = "MODIS Liquid Cloud Particle Size*CLWMODIS" ;
		REFFCLWMODIS:cell_methods = "time: mean" ;
	int REFFCLWMODIS_nacs(ncol) ;
	double RELHUM(lev, ncol) ;
		RELHUM:mdims = 10 ;
		RELHUM:units = "percent" ;
		RELHUM:long_name = "Relative humidity" ;
		RELHUM:cell_methods = "time: mean" ;
	int RELHUM_nacs ;
	double SHFLX(ncol) ;
		SHFLX:units = "W/m2" ;
		SHFLX:long_name = "Surface sensible heat flux" ;
		SHFLX:cell_methods = "time: mean" ;
	int SHFLX_nacs ;
	double SHOC_MIX(lev, ncol) ;
		SHOC_MIX:mdims = 10 ;
		SHOC_MIX:units = "m" ;
		SHOC_MIX:long_name = "SHOC length scale" ;
		SHOC_MIX:cell_methods = "time: mean" ;
	int SHOC_MIX_nacs ;
	double SHOC_TKE(lev, ncol) ;
		SHOC_TKE:mdims = 10 ;
		SHOC_TKE:units = "m2/s2" ;
		SHOC_TKE:mixing_ratio = "wet" ;
		SHOC_TKE:long_name = "TKE" ;
		SHOC_TKE:cell_methods = "time: mean" ;
	int SHOC_TKE_nacs ;
	double SNOWHICE(ncol) ;
		SNOWHICE:units = "m" ;
		SNOWHICE:long_name = "Snow depth over ice" ;
		SNOWHICE:cell_methods = "time: mean" ;
	int SNOWHICE_nacs ;
	double SNOWHLND(ncol) ;
		SNOWHLND:units = "m" ;
		SNOWHLND:long_name = "Water equivalent snow depth" ;
		SNOWHLND:cell_methods = "time: mean" ;
	int SNOWHLND_nacs ;
	double SOLIN(ncol) ;
		SOLIN:Sampling_Sequence = "rad_lwsw" ;
		SOLIN:units = "W/m2" ;
		SOLIN:long_name = "Solar insolation" ;
		SOLIN:cell_methods = "time: mean" ;
	int SOLIN_nacs ;
	double SSAVIS(ncol) ;
		SSAVIS:_FillValue = 1.e+36 ;
		SSAVIS:missing_value = 1.e+36 ;
		SSAVIS:long_name = "Aerosol singel-scatter albedo" ;
		SSAVIS:cell_methods = "time: mean" ;
	int SSAVIS_nacs(ncol) ;
	double SWCF(ncol) ;
		SWCF:Sampling_Sequence = "rad_lwsw" ;
		SWCF:units = "W/m2" ;
		SWCF:long_name = "Shortwave cloud forcing" ;
		SWCF:cell_methods = "time: mean" ;
	int SWCF_nacs ;
	double T(lev, ncol) ;
		T:mdims = 10 ;
		T:units = "K" ;
		T:long_name = "Temperature" ;
		T:cell_methods = "time: mean" ;
	int T_nacs ;
	double TAUGWX(ncol) ;
		TAUGWX:units = "N/m2" ;
		TAUGWX:long_name = "Zonal gravity wave surface stress" ;
		TAUGWX:cell_methods = "time: mean" ;
	int TAUGWX_nacs ;
	double TAUGWY(ncol) ;
		TAUGWY:units = "N/m2" ;
		TAUGWY:long_name = "Meridional gravity wave surface stress" ;
		TAUGWY:cell_methods = "time: mean" ;
	int TAUGWY_nacs ;
	double TAUILOGMODIS(ncol) ;
		TAUILOGMODIS:_FillValue = -1.e+30 ;
		TAUILOGMODIS:missing_value = -1.e+30 ;
		TAUILOGMODIS:units = "1" ;
		TAUILOGMODIS:long_name = "MODIS Ice Cloud Optical Thickness (Log10 Mean)*CLIMODIS" ;
		TAUILOGMODIS:cell_methods = "time: mean" ;
	int TAUILOGMODIS_nacs(ncol) ;
	double TAUIMODIS(ncol) ;
		TAUIMODIS:_FillValue = -1.e+30 ;
		TAUIMODIS:missing_value = -1.e+30 ;
		TAUIMODIS:units = "1" ;
		TAUIMODIS:long_name = "MODIS Ice Cloud Optical Thickness*CLIMODIS" ;
		TAUIMODIS:cell_methods = "time: mean" ;
	int TAUIMODIS_nacs(ncol) ;
	double TAUTLOGMODIS(ncol) ;
		TAUTLOGMODIS:_FillValue = -1.e+30 ;
		TAUTLOGMODIS:missing_value = -1.e+30 ;
		TAUTLOGMODIS:units = "1" ;
		TAUTLOGMODIS:long_name = "MODIS Total Cloud Optical Thickness (Log10 Mean)*CLTMODIS" ;
		TAUTLOGMODIS:cell_methods = "time: mean" ;
	int TAUTLOGMODIS_nacs(ncol) ;
	double TAUTMODIS(ncol) ;
		TAUTMODIS:_FillValue = -1.e+30 ;
		TAUTMODIS:missing_value = -1.e+30 ;
		TAUTMODIS:units = "1" ;
		TAUTMODIS:long_name = "MODIS Total Cloud Optical Thickness*CLTMODIS" ;
		TAUTMODIS:cell_methods = "time: mean" ;
	int TAUTMODIS_nacs(ncol) ;
	double TAUWLOGMODIS(ncol) ;
		TAUWLOGMODIS:_FillValue = -1.e+30 ;
		TAUWLOGMODIS:missing_value = -1.e+30 ;
		TAUWLOGMODIS:units = "1" ;
		TAUWLOGMODIS:long_name = "MODIS Liquid Cloud Optical Thickness (Log10 Mean)*CLWMODIS" ;
		TAUWLOGMODIS:cell_methods = "time: mean" ;
	int TAUWLOGMODIS_nacs(ncol) ;
	double TAUWMODIS(ncol) ;
		TAUWMODIS:_FillValue = -1.e+30 ;
		TAUWMODIS:missing_value = -1.e+30 ;
		TAUWMODIS:units = "1" ;
		TAUWMODIS:long_name = "MODIS Liquid Cloud Optical Thickness*CLWMODIS" ;
		TAUWMODIS:cell_methods = "time: mean" ;
	int TAUWMODIS_nacs(ncol) ;
	double TAUX(ncol) ;
		TAUX:units = "N/m2" ;
		TAUX:long_name = "Zonal surface stress" ;
		TAUX:cell_methods = "time: mean" ;
	int TAUX_nacs ;
	double TAUY(ncol) ;
		TAUY:units = "N/m2" ;
		TAUY:long_name = "Meridional surface stress" ;
		TAUY:cell_methods = "time: mean" ;
	int TAUY_nacs ;
	double TGCLDCWP(ncol) ;
		TGCLDCWP:units = "kg/m2" ;
		TGCLDCWP:long_name = "Total grid-box cloud water path (liquid and ice)" ;
		TGCLDCWP:cell_methods = "time: mean" ;
	int TGCLDCWP_nacs ;
	double TGCLDIWP(ncol) ;
		TGCLDIWP:units = "kg/m2" ;
		TGCLDIWP:long_name = "Total grid-box cloud ice water path" ;
		TGCLDIWP:cell_methods = "time: mean" ;
	int TGCLDIWP_nacs ;
	double TGCLDLWP(ncol) ;
		TGCLDLWP:units = "kg/m2" ;
		TGCLDLWP:long_name = "Total grid-box cloud liquid water path" ;
		TGCLDLWP:cell_methods = "time: mean" ;
	int TGCLDLWP_nacs ;
	double TH7001000(ncol) ;
		TH7001000:units = "K" ;
		TH7001000:long_name = "Theta difference 700 mb - 1000 mb" ;
		TH7001000:cell_methods = "time: mean" ;
	int TH7001000_nacs ;
	double THL_SEC(ilev, ncol) ;
		THL_SEC:mdims = 11 ;
		THL_SEC:units = "K2" ;
		THL_SEC:long_name = "Temperature variance" ;
		THL_SEC:cell_methods = "time: mean" ;
	int THL_SEC_nacs ;
	double TK(lev, ncol) ;
		TK:mdims = 10 ;
		TK:units = "m2/s" ;
		TK:long_name = "Eddy viscosity for momentum" ;
		TK:cell_methods = "time: mean" ;
	int TK_nacs ;
	double TKH(lev, ncol) ;
		TKH:mdims = 10 ;
		TKH:units = "m2/s" ;
		TKH:long_name = "Eddy viscosity for heat" ;
		TKH:cell_methods = "time: mean" ;
	int TKH_nacs ;
	double TMQ(ncol) ;
		TMQ:units = "kg/m2" ;
		TMQ:long_name = "Total (vertically integrated) precipitable water" ;
		TMQ:cell_methods = "time: mean" ;
	int TMQ_nacs ;
	double TOT_CLD_VISTAU(lev, ncol) ;
		TOT_CLD_VISTAU:mdims = 10 ;
		TOT_CLD_VISTAU:Sampling_Sequence = "rad_lwsw" ;
		TOT_CLD_VISTAU:_FillValue = 1.e+36 ;
		TOT_CLD_VISTAU:missing_value = 1.e+36 ;
		TOT_CLD_VISTAU:units = "1" ;
		TOT_CLD_VISTAU:long_name = "Total gridbox cloud visible optical depth" ;
		TOT_CLD_VISTAU:cell_methods = "time: mean" ;
	int TOT_CLD_VISTAU_nacs(ncol) ;
	double TOT_ICLD_VISTAU(lev, ncol) ;
		TOT_ICLD_VISTAU:mdims = 10 ;
		TOT_ICLD_VISTAU:Sampling_Sequence = "rad_lwsw" ;
		TOT_ICLD_VISTAU:_FillValue = 1.e+36 ;
		TOT_ICLD_VISTAU:missing_value = 1.e+36 ;
		TOT_ICLD_VISTAU:units = "1" ;
		TOT_ICLD_VISTAU:long_name = "Total in-cloud visible optical depth" ;
		TOT_ICLD_VISTAU:cell_methods = "time: mean" ;
	int TOT_ICLD_VISTAU_nacs(ncol) ;
	double TREFHT(ncol) ;
		TREFHT:units = "K" ;
		TREFHT:long_name = "Reference height temperature" ;
		TREFHT:cell_methods = "time: mean" ;
	int TREFHT_nacs ;
	double TROP_P(ncol) ;
		TROP_P:_FillValue = 1.e+36 ;
		TROP_P:missing_value = 1.e+36 ;
		TROP_P:units = "Pa" ;
		TROP_P:long_name = "Tropopause Pressure" ;
		TROP_P:cell_methods = "time: mean" ;
	int TROP_P_nacs(ncol) ;
	double TROP_T(ncol) ;
		TROP_T:_FillValue = 1.e+36 ;
		TROP_T:missing_value = 1.e+36 ;
		TROP_T:units = "K" ;
		TROP_T:long_name = "Tropopause Temperature" ;
		TROP_T:cell_methods = "time: mean" ;
	int TROP_T_nacs(ncol) ;
	double TS(ncol) ;
		TS:units = "K" ;
		TS:long_name = "Surface temperature (radiative)" ;
		TS:cell_methods = "time: mean" ;
	int TS_nacs ;
	double TSMN(ncol) ;
		TSMN:units = "K" ;
		TSMN:long_name = "Minimum surface temperature over output period" ;
		TSMN:cell_methods = "time: minimum" ;
	int TSMN_nacs ;
	double TSMX(ncol) ;
		TSMX:units = "K" ;
		TSMX:long_name = "Maximum surface temperature over output period" ;
		TSMX:cell_methods = "time: maximum" ;
	int TSMX_nacs ;
	double TUH(ncol) ;
		TUH:units = "W/m" ;
		TUH:long_name = "Total (vertically integrated) zonal MSE flux" ;
		TUH:cell_methods = "time: mean" ;
	int TUH_nacs ;
	double TUQ(ncol) ;
		TUQ:units = "kg/m/s" ;
		TUQ:long_name = "Total (vertically integrated) zonal water flux" ;
		TUQ:cell_methods = "time: mean" ;
	int TUQ_nacs ;
	double TVH(ncol) ;
		TVH:units = "W/m" ;
		TVH:long_name = "Total (vertically integrated) meridional MSE flux" ;
		TVH:cell_methods = "time: mean" ;
	int TVH_nacs ;
	double TVQ(ncol) ;
		TVQ:units = "kg/m/s" ;
		TVQ:long_name = "Total (vertically integrated) meridional water flux" ;
		TVQ:cell_methods = "time: mean" ;
	int TVQ_nacs ;
	double U(lev, ncol) ;
		U:mdims = 10 ;
		U:units = "m/s" ;
		U:long_name = "Zonal wind" ;
		U:cell_methods = "time: mean" ;
	int U_nacs ;
	double U10(ncol) ;
		U10:units = "m/s" ;
		U10:long_name = "10m wind speed" ;
		U10:cell_methods = "time: mean" ;
	int U10_nacs ;
	double UU(lev, ncol) ;
		UU:mdims = 10 ;
		UU:units = "m2/s2" ;
		UU:long_name = "Zonal velocity squared" ;
		UU:cell_methods = "time: mean" ;
	int UU_nacs ;
	double UW_SEC(ilev, ncol) ;
		UW_SEC:mdims = 11 ;
		UW_SEC:units = "m2/s2" ;
		UW_SEC:long_name = "Momentum flux" ;
		UW_SEC:cell_methods = "time: mean" ;
	int UW_SEC_nacs ;
	double V(lev, ncol) ;
		V:mdims = 10 ;
		V:units = "m/s" ;
		V:long_name = "Meridional wind" ;
		V:cell_methods = "time: mean" ;
	int V_nacs ;
	double VQ(lev, ncol) ;
		VQ:mdims = 10 ;
		VQ:units = "m/skg/kg" ;
		VQ:long_name = "Meridional water transport" ;
		VQ:cell_methods = "time: mean" ;
	int VQ_nacs ;
	double VT(lev, ncol) ;
		VT:mdims = 10 ;
		VT:units = "K m/s" ;
		VT:long_name = "Meridional heat transport" ;
		VT:cell_methods = "time: mean" ;
	int VT_nacs ;
	double VU(lev, ncol) ;
		VU:mdims = 10 ;
		VU:units = "m2/s2" ;
		VU:long_name = "Meridional flux of zonal momentum" ;
		VU:cell_methods = "time: mean" ;
	int VU_nacs ;
	double VV(lev, ncol) ;
		VV:mdims = 10 ;
		VV:units = "m2/s2" ;
		VV:long_name = "Meridional velocity squared" ;
		VV:cell_methods = "time: mean" ;
	int VV_nacs ;
	double VW_SEC(ilev, ncol) ;
		VW_SEC:mdims = 11 ;
		VW_SEC:units = "m2/s2" ;
		VW_SEC:long_name = "Momentum flux" ;
		VW_SEC:cell_methods = "time: mean" ;
	int VW_SEC_nacs ;
	double W3(ilev, ncol) ;
		W3:mdims = 11 ;
		W3:units = "m3/s3" ;
		W3:long_name = "Third moment vertical velocity" ;
		W3:cell_methods = "time: mean" ;
	int W3_nacs ;
	double WQL_SEC(lev, ncol) ;
		WQL_SEC:mdims = 10 ;
		WQL_SEC:units = "W/m2" ;
		WQL_SEC:long_name = "Liquid water flux" ;
		WQL_SEC:cell_methods = "time: mean" ;
	int WQL_SEC_nacs ;
	double WQW_SEC(ilev, ncol) ;
		WQW_SEC:mdims = 11 ;
		WQW_SEC:units = "W/m2" ;
		WQW_SEC:long_name = "Moisture flux" ;
		WQW_SEC:cell_methods = "time: mean" ;
	int WQW_SEC_nacs ;
	double WSUB(lev, ncol) ;
		WSUB:mdims = 10 ;
		WSUB:units = "m/s" ;
		WSUB:long_name = "Diagnostic sub-grid vertical velocity" ;
		WSUB:cell_methods = "time: mean" ;
	int WSUB_nacs ;
	double WTHL_SEC(ilev, ncol) ;
		WTHL_SEC:mdims = 11 ;
		WTHL_SEC:units = "W/m2" ;
		WTHL_SEC:long_name = "Heat flux" ;
		WTHL_SEC:cell_methods = "time: mean" ;
	int WTHL_SEC_nacs ;
	double WTHV_SEC(lev, ncol) ;
		WTHV_SEC:mdims = 10 ;
		WTHV_SEC:units = "K m/s" ;
		WTHV_SEC:long_name = "Buoyancy Flux" ;
		WTHV_SEC:cell_methods = "time: mean" ;
	int WTHV_SEC_nacs ;
	double WTKE_SEC(ilev, ncol) ;
		WTKE_SEC:mdims = 11 ;
		WTKE_SEC:units = "m3/s3" ;
		WTKE_SEC:long_name = "Vertical flux of turbulence" ;
		WTKE_SEC:cell_methods = "time: mean" ;
	int WTKE_SEC_nacs ;
	double W_SEC(lev, ncol) ;
		W_SEC:mdims = 10 ;
		W_SEC:units = "m2/s2" ;
		W_SEC:long_name = "Vertical velocity variance" ;
		W_SEC:cell_methods = "time: mean" ;
	int W_SEC_nacs ;
	double Z3(lev, ncol) ;
		Z3:mdims = 10 ;
		Z3:units = "m" ;
		Z3:long_name = "Geopotential Height (above sea level)" ;
		Z3:cell_methods = "time: mean" ;
	int Z3_nacs ;
	double aero_water(lev, ncol) ;
		aero_water:mdims = 10 ;
		aero_water:units = "m" ;
		aero_water:long_name = "sum of aerosol water of interstitial modes wat_a1+wat_a2+wat_a3+wat_a4" ;
		aero_water:cell_methods = "time: mean" ;
	int aero_water_nacs ;
	double hstobie_linoz(lev, ncol) ;
		hstobie_linoz:mdims = 10 ;
		hstobie_linoz:units = "fraction of model time" ;
		hstobie_linoz:long_name = "Lowest possible Linoz level" ;
	int hstobie_linoz_nacs ;
	double liq_ice_exchange(lev, ncol) ;
		liq_ice_exchange:mdims = 10 ;
		liq_ice_exchange:units = "kg/kg/s" ;
		liq_ice_exchange:long_name = "Tendency for conversion from/to liquid phase to/from frozen phase" ;
		liq_ice_exchange:cell_methods = "time: mean" ;
	int liq_ice_exchange_nacs ;
	double vap_cld_exchange(lev, ncol) ;
		vap_cld_exchange:mdims = 10 ;
		vap_cld_exchange:units = "kg/kg/s" ;
		vap_cld_exchange:long_name = "Tendency for conversion from/to vapor phase to/from cloud category" ;
		vap_cld_exchange:cell_methods = "time: mean" ;
	int vap_cld_exchange_nacs ;
	double vap_ice_exchange(lev, ncol) ;
		vap_ice_exchange:mdims = 10 ;
		vap_ice_exchange:units = "kg/kg/s" ;
		vap_ice_exchange:long_name = "Tendency for conversion from/to vapor phase to/from frozen phase" ;
		vap_ice_exchange:cell_methods = "time: mean" ;
	int vap_ice_exchange_nacs ;
	double vap_liq_exchange(lev, ncol) ;
		vap_liq_exchange:mdims = 10 ;
		vap_liq_exchange:units = "kg/kg/s" ;
		vap_liq_exchange:long_name = "Tendency for conversion from/to vapor phase to/from liquid phase" ;
		vap_liq_exchange:cell_methods = "time: mean" ;
	int vap_liq_exchange_nacs ;

// global attributes:
		:ne = 30 ;
		:np = 4 ;
		:Conventions = "CF-1.0" ;
		:source = "CAM" ;
		:case = "compy_FSCREAM-LR_ne30_SCREAM-forked-github_clen_1600p" ;
		:title = "UNSET" ;
		:logname = "shpu881" ;
		:host = "compy-e.pnl.gov" ;
		:Version = "$Name$" ;
		:revision_Id = "$Id$" ;
		:initial_file = "/compyfs/inputdata/atm/cam/inic/homme/cami_mam3_Linoz_ne30np4_L72_c160214.nc" ;
		:topography_file = "/compyfs/inputdata/atm/cam/topo/USGS-gtopo30_ne30np4_16xdel2-PFC-consistentSGH.nc" ;
		:time_period_freq = "month_1" ;
}
